HTTP 완벽가이드 책을 읽고 정리한 내용입니다.

---

우리가 살아가고 있는 세계는 리소스를 분류하기 위해 그만의 표준화된 이름을 가지고있다.

버스 노선번호, 전화번호, 주민등록번호, 계좌번호 등...

모두가 이렇게 각기 다른 이름들에 대한 작명 표준에 동의하기에 리소스를 모두 쉽게 공유할 수 있다.

이처럼 URL은 인터넷의 리소스를 가리키는 표준이름이다.

URL은 전자정보 일부를 가리키고 그것이 어디에 있고 어떻게 접근할 수 있는지 알려준다.

## 2.1 인터넷의 리소스 탐색하기

사용자는 브라우저에 URL을 입력하고 브라우저는 화면 뒤에서 사용자가 원하는 리소스를 얻기 위해서 적절한 프로토콜을 사용하여 메시지를 전송한다.

HTTP 애플리케이션은 URL을 URI의 한 부분으로 취급한다.

```
http://www.joes-hardware.com/seasonal/index-fall.html
```

- http는 url의 스킴이며 웹 클라이언트가 리소스에 어떻게 접근하는지 알려준다.
- www.joes-hardware.com은 서버의 위치다. 리소스가 어디에 호스팅 되어 있는지 알려준다.
- /seasonal/index-fall.html은 리소스의 경로다. 서버에서 요청받은 리소스가 무엇인지 알려준다.

### 2.1.1 URL이 있기 전 암흑의 시대

URL이 있기전에는 리소스를 공유하려면 애플리케이션마다 달리 가지고 있는 분류 방식을 사용했다.

하지만 URL을 사용하고 애플리케이션은 하나의 인터페이스를 통해 일관된 방식으로 리소스를 공유한다.

사용자가 리소스에 접근하기 위해 사용되는 프로토콜과 접근 방식을 몰라도 브라우저는 그들이 요청하는 리소스를 편리하게 가져올 수 있다.

URL은 브라우저가 더 영리하게 리소스에 접근하고 그것을 다루게 함으로써 **온라인 세상을 단순화시킨다.**

## 2.2 URL 문법

<스킴>://<사용자이름>:<비밀번호>@<호스트>:<포트>/<경로>;<파라미터>?<질의>#<프래그먼트>

### 2.2.1 스킴: 사용할 프로토콜

스킴은 주어진 리소스에 어떻게 접근하는지 알려주는 중요 정보이다.

이는 URL을 해석하는 애플리케이션이 어떤 프로토콜을 사용하여 리소스를 요청해야 하는지 알려준다.

### 2.2.2 사용자 이름과 비밀번호

쓰는 경우를 아직 못봐서.. 감이 안온다..

책의 예제에서는 FTP 서버를 예로 들었다.

### 2.2.3 호스트와 포트

호스트는 접근하려고 하는 리소스를 가지고 있는 인터넷상의 호스트장비를 가리킨다.

포트는 서버가 열어놓은 네트워크 포트를 가리킨다.

( HTTP는 기본 80포트, HTTPS는 기본 443포트 )

### 2.2.4 경로

서버가 리소스의 위치를 찾는데 사용하는 정보

요즘 RESTApi를 사용해 리소스 경로를 기입하고 HTTP 메서드를 활용

### 2.2.5 파라미터

URL을 사용하는 애플리케이션이 리소스에 접근하려면 프로토콜 파라미터가 필요하다.

🤔  책의 내용을 읽어보면 http같은 경우 header정보를 이용해 정보를 넘기는것과 비슷한거 같다.

### 2.2.6 질의 문자열

? 이후 나오는 이름=값 으로 보통 웹 개발에서 사용하는 컴포넌트이다.

### 2.2.7 프래그먼트

리소스의 특정 부분을 가리킬 수 있도록 URL은 리소스 내의 조각을 가리킬 수 있는 컴포넌트를 제공한다.

일반적으로 HTTP 서버는 객체 일부가 아닌 전체를 다루기 때문에, 클라이언트는 서버에 프래그먼트를 제공하지 않는다.

## 2.3 단축 URL

### 2.3.1 상대 URL

상대 URL 문법에 따르면, HTML 작성자는 URL에 스킴과 호스트 그리고 다른 컴포넌트들을 모두 입력하지 않아도 된다.

😎  개발자가 HTML을 작성할때 절대URL을 모두 기입하는게 아니라 ./index.html 을 기입하는 것.

### 2.6 미래

URN에 대한 내용이 있다.

🤔  나는 실제로 사용될 수 있을지 모르겠다. 큰 장점도 안느껴지고... 미래에는 어떻게 되어있을까??

## 정리

URL과 리소스에 대해 정리가 되어있었다. 평소 웹개발자라면 많이 다루고 들어봤을 내용인거 같다.
